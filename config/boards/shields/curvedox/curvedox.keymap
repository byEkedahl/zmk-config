/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

&mt {
    tapping-term-ms = <201>;
    flavor = "tap-preferred";
};
&sk {
     release-after-ms = <2000>;
     quick-release;
};

/* Layers */
#define AL 0
#define SM 1
#define NU 2
#define NA 3
#define BT 4	

/ {
        combo_bt  {
            timeout-ms = <10>;
            key-positions = <0 1 2 3>;
            bindings = <&to BT>;
        };

        keymap {
                compatible = "zmk,keymap";

                alfa_layer {
// -----------------------------------------------------------------------------------------
// |  Q  |  W  |  E  |  R  |  T   |             |  Y  |  U   |  I  |  O  |  P  |
// |  A  |  S  |  D  |  F  |  G   |             |  H  |  J   |  K  |  L  |  Ö  |
// |  Z  |  X  |  C  |  V  |  B   |             |  N  |  M   |  Å  |  Ä  | ->| |
//             | NUM/BACK | SHFT | GUI |   | ALT | SPACE | SYM/ENTER |
                        bindings = <
   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P
   &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI
   &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp LBKT  &kp SQT &kp TAB
          &kp LGUI &kp LSHFT &lt 2 BSPC  &kp RALT &kp SPACE &lt 1 RET 
                        >;
                };

                sym_layer {
// -----------------------------------------------------------------------------------------
// |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |
// |     |     |     |     |     |   |  -  |  =  |  {  |  }  | "|" |
// |     |     |     |     |     |   |  _  |  +  |  [  |  ]  |  \  |
//             | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp EXCL  &kp AT    &kp HASH  &kp DLLR  &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR
   &trans    &trans    &trans    &trans    &trans      &kp MINUS &kp EQUAL &kp LBKT        &kp RBKT &kp PIPE
   &trans    &trans    &trans    &trans    &trans      &trans    &trans    &trans          &trans   &kp BSLH
                       &kp LGUI  &to AL   &kp SPACE   &kp RET   &kp SPACE    &kp RALT
                        >;
                };

// This layer is unreachable until "tri layer state" is sorted out.
// Leaving it here for completeness.
                num_layer {
// -----------------------------------------------------------------------------------------
// |  1  |  2  |  3  |  4  |  5  |>   <|  6  |  7  |  8  |  9  |  D  |
// |     |     |     |     |     |>   <|  B  |  4  |  5  |  6  |  E  |
// |     |     |     |     |     |>   <|  :  |  1  |  2  |  3  | ->| |
//             |     |     |     |>   <|  .  |  0  |  ,  |
                        bindings = <
   &kp N1 &kp N2    &kp N3    &kp N4          &kp N5          &kp N6  &kp N7  &kp N8 &kp N9 &kp 0
   &trans &kp EQUAL &kp PLUS  &kp KP_MULTIPLY &trans          &trans  &kp N4  &kp N5 &kp N6 &kp SEMI
   &trans &trans    &kp MINUS &kp KP_DIVIDE &trans                   &kp COLON  &kp N1  &kp N2 &kp N3 &kp TAB
                    &trans    &to AL &trans                   &kp DOT &kp N0  &kp COMMA
                        >;
                };

                nav_layer {
// -----------------------------------------------------------------------------------------
// |BTCLR|     | ESC |  ~   |     |   | TAB | HOME |  UP  | END | DEL  |
// | BT1 | GUI | ALT | CTRL | NUM |   |  /  | LEFT | DOWN | RGT | BKSP |
// | BT2 |     |     |      |     |   |  \  | ENT  |      |     |      |
//             |     |      |     |   |     |      |      |
                        bindings = <
   &trans  &trans      &kp ESC  &kp TILDE &trans     &kp TAB  &kp HOME &kp UP   &kp END   &kp DEL
   &trans  &kp K_CMENU &kp RALT &kp LCTRL &mo 3      &kp FSLH &kp LEFT &kp DOWN &kp RIGHT &kp BSPC
   &trans  &trans      &trans   &trans    &trans     &kp BSLH &kp RET  &trans   &trans    &trans
                            &trans   &to AL    &trans     &trans   &trans   &trans
                        >;
                };

                bt_layer {
// -----------------------------------------------------------------------------------------
// |BTCLR|     | ESC |  ~   |     |   | TAB | HOME |  UP  | END | DEL  |
// | BT1 | GUI | ALT | CTRL | NUM |   |  /  | LEFT | DOWN | RGT | BKSP |
// | BT2 |     |     |      |     |   |  \  | ENT  |      |     |      |
//             |     |      |     |   |     |      |      |
                        bindings = <
   &bootloader  &trans       &trans       &trans &trans           &kp TAB  &kp HOME &kp UP   &kp END   &bt BT_CLR
   &bt BT_SEL 0 &trans       &bt BT_PRV   &bt BT_NXT &mo 3            &kp FSLH &kp LEFT &kp DOWN &kp RIGHT &kp BSPC
   &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &trans    &trans           &kp BSLH &kp RET  &trans   &trans    &trans
                                 &trans   &to AL    &trans           &trans   &trans   &trans
                        >;
                };


        };
};

